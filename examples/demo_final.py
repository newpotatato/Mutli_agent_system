
"""
Финальная демонстрация работы класса Task с функцией _determine_task_type
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))
from src.core.task import Task

def main():
    print("=== Демонстрация классификации задач для LLM ===\n")
    
    # Примеры задач разных типов
    examples = [
        # Математические задачи
        "Решить систему уравнений: 2x + 3y = 7, x - y = 1",
        "Найти производную функции f(x) = x^3 + 2x^2 - 5x + 3",
        "Вычислить определенный интеграл от 0 до π функции sin(x)",
        
        # Программирование
        "Создать функцию на Python для поиска наибольшего элемента в списке",
        "Написать алгоритм сортировки пузырьком на JavaScript",
        "Отладить код, который выдает ошибку IndexError",
        
        # Текстовые задачи
        "Написать эссе на тему влияния искусственного интеллекта на общество",
        "Перевести следующий текст с английского на русский язык",
        "Проверить и исправить грамматические ошибки в документе",
        
        # Аналитические задачи
        "Проанализировать тренды продаж за последние 6 месяцев",
        "Сравнить эффективность двух рекламных кампаний на основе данных",
        "Исследовать корреляцию между ценой и спросом на товар",
        
        # Творческие задачи
        "Придумать оригинальную концепцию для мобильного приложения",
        "Создать креативный слоган для новой линейки товаров",
        "Разработать дизайн логотипа для технологической компании",
        
        # Объяснительные задачи
        "Объяснить принцип работы квантового компьютера простыми словами",
        "Разъяснить разницу между машинным обучением и глубоким обучением",
        "Как работает протокол HTTPS и зачем он нужен?",
        
        # Планирование
        "Составить план запуска нового продукта на рынок",
        "Спланировать этапы разработки веб-приложения",
        "Организовать структуру проекта для команды из 5 разработчиков"
    ]
    
    # Создаем задачи с разными приоритетами и сложностями
    import random
    
    tasks = []
    for prompt in examples:
        priority = random.randint(3, 9)
        complexity = random.randint(4, 8)
        task = Task(prompt, priority, complexity)
        tasks.append(task)
    
    # Группируем задачи по типам
    task_types = {}
    for task in tasks:
        if task.type not in task_types:
            task_types[task.type] = []
        task_types[task.type].append(task)
    
    # Выводим результаты
    for task_type, task_list in task_types.items():
        print(f"\n[TASKS] Тип задач: {task_type.upper()}")
        print("=" * 50)
        for task in task_list:
            print(f"• {task.prompt}")
            print(f"  Приоритет: {task.priority}/10, Сложность: {task.complexity}/10")
            print()
    
    # Статистика
    print("\n[STATS] Статистика классификации:")
    print("=" * 50)
    total_tasks = len(tasks)
    for task_type, task_list in task_types.items():
        count = len(task_list)
        percentage = (count / total_tasks) * 100
        print(f"{task_type.upper()}: {count} задач ({percentage:.1f}%)")
    
    print(f"\nВсего задач: {total_tasks}")

if __name__ == "__main__":
    main()
